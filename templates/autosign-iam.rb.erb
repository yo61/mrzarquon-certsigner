<%= @real_autosign_rubyvm %>

# Copyright 2014 Jeremy T. Bouse
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require 'etc'

ENV['HOME'] = Etc.getpwuid(Process.uid).dir

# Unfortunately fog doesn't give us happy fun times and provide a list of
# supported regions like boto does
regions = [ 'us-east-1', 'eu-west-1', 'us-west-1', 'us-west-2', 'ap-northeast-1', 'ap-southeast-1', 'ap-southeast-2', 'sa-east-1', ]

require 'fog'
require 'puppet'
require 'puppet/ssl/certificate_request'

clientcert = ARGV.pop

csr = Puppet::SSL::CertificateRequest.from_s(STDIN.read)
pp_instance_id = csr.request_extensions.find { |a| a['oid'] == 'pp_instance_id' }
instance_id = pp_instance_id['value']

# Multi-region search, assume that nothing is happy by default
retcode = 2

regions.each do |region|
  ec2 = Fog::Compute::AWS.new({:use_iam_profile => true, :region => region})
  server = ec2.servers.find { |s| s.id == instance_id }
  # assume that we found a server in this region
  if server
    retcode = 0
  end

  if csr.name != clientcert
    retcode = 1
  elsif not server
    retcode = 2
  elsif server.state != 'running'
    retcode = 3
  end

  if retcode == 0
    break
  end
end

exit retcode
